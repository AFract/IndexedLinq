{"name":"IP.i4o","tagline":"Indexes for Objects","body":"IP.i4o - Index for objects\r\n=======================\r\n\r\nIP.i4o (index for objects) enhances the i4o library (<https://github.com/ericksoa/i4o>) from which it was forked. This library was renamed as well in order to prevent confusion if, for example, both this and the original were to appear on NuGet.\r\n\r\n## Key Features\r\n\r\n* Allows indexes to be added to collections to optimize LINQ queries since, by default, LINQ queries collection items sequentially. Specifically, this is achieved by adding either a comparison or an equality index, which provide O(log n) or O(1) search performance, respectively.\r\n<pre>Standard (unoptimized) LINQ queries: **O(n)**\r\nLINQ queries with comparison index: **O(log n)**\r\nLINQ queries with equality index: **O(1)**</pre>\r\n\r\n## Enhancements/changes to i4o\r\n\r\n* Optimized inefficient index queries whereby the binary search was performed twice: first to check if the key existed and again to look up the key/value\r\n* Removed c5 collections dependency/source code (it was used by i40 primarily for its red-black tree implementation and helper methods for selecting ranges) in favor of the .NET built-in generic `SortedList<TKey,TValue>`.\r\n* Removed Silverlight projects -- this is mainly because I'm not developing anything for Silverlight at the moment and do not want to spend time maintaining it.\r\n\r\n## How to Build\r\n\r\nTo be completed\r\n\r\n## License\r\n\r\nGNU Lesser General Public License (LGPL)\r\nVersion 3.0, 29 June 2007","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}